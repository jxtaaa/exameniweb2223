/* tslint:disable */
/* eslint-disable */
/**
 * Tercer Parcial - API REST. Ingeniería Web
 * José Luis Bueno Pachón.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Linea
 */
export interface Linea {
    /**
     * 
     * @type {string}
     * @memberof Linea
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof Linea
     */
    codLinea: number;
    /**
     * 
     * @type {string}
     * @memberof Linea
     */
    nombreLinea: string;
    /**
     * 
     * @type {number}
     * @memberof Linea
     */
    sentido: number;
    /**
     * 
     * @type {string}
     * @memberof Linea
     */
    orden: string;
    /**
     * 
     * @type {string}
     * @memberof Linea
     */
    codParada: string;
    /**
     * 
     * @type {string}
     * @memberof Linea
     */
    nombreParada: string;
    /**
     * 
     * @type {string}
     * @memberof Linea
     */
    direccion: string;
    /**
     * 
     * @type {number}
     * @memberof Linea
     */
    lat: number;
    /**
     * 
     * @type {number}
     * @memberof Linea
     */
    lon: number;
}

/**
 * Check if a given object implements the Linea interface.
 */
export function instanceOfLinea(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "codLinea" in value;
    isInstance = isInstance && "nombreLinea" in value;
    isInstance = isInstance && "sentido" in value;
    isInstance = isInstance && "orden" in value;
    isInstance = isInstance && "codParada" in value;
    isInstance = isInstance && "nombreParada" in value;
    isInstance = isInstance && "direccion" in value;
    isInstance = isInstance && "lat" in value;
    isInstance = isInstance && "lon" in value;

    return isInstance;
}

export function LineaFromJSON(json: any): Linea {
    return LineaFromJSONTyped(json, false);
}

export function LineaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Linea {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, '_id') ? undefined : json['_id'],
        'codLinea': json['codLinea'],
        'nombreLinea': json['nombreLinea'],
        'sentido': json['sentido'],
        'orden': json['orden'],
        'codParada': json['codParada'],
        'nombreParada': json['nombreParada'],
        'direccion': json['direccion'],
        'lat': json['lat'],
        'lon': json['lon'],
    };
}

export function LineaToJSON(value?: Linea | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_id': value.id,
        'codLinea': value.codLinea,
        'nombreLinea': value.nombreLinea,
        'sentido': value.sentido,
        'orden': value.orden,
        'codParada': value.codParada,
        'nombreParada': value.nombreParada,
        'direccion': value.direccion,
        'lat': value.lat,
        'lon': value.lon,
    };
}

