/* tslint:disable */
/* eslint-disable */
/**
 * Tercer Parcial - API REST. Ingeniería Web
 * José Luis Bueno Pachón.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  Linea,
} from '../models';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    LineaFromJSON,
    LineaToJSON,
} from '../models';

export interface GetLineasRequest {
    numLinea?: number;
    sentido?: number;
}

export interface GetLineasByLatitudLongitudLineasLatitudLongitudGetRequest {
    latitud: number;
    longitud: number;
}

export interface GetLineasByNombreRequest {
    nombre: string;
}

/**
 * 
 */
export class LineasApi extends runtime.BaseAPI {

    /**
     * Get Lineas
     */
    async getLineasRaw(requestParameters: GetLineasRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Linea>>> {
        const queryParameters: any = {};

        if (requestParameters.numLinea !== undefined) {
            queryParameters['numLinea'] = requestParameters.numLinea;
        }

        if (requestParameters.sentido !== undefined) {
            queryParameters['sentido'] = requestParameters.sentido;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/lineas`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(LineaFromJSON));
    }

    /**
     * Get Lineas
     */
    async getLineas(requestParameters: GetLineasRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Linea>> {
        const response = await this.getLineasRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get Lineas By Latitud Longitud
     */
    async getLineasByLatitudLongitudLineasLatitudLongitudGetRaw(requestParameters: GetLineasByLatitudLongitudLineasLatitudLongitudGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.latitud === null || requestParameters.latitud === undefined) {
            throw new runtime.RequiredError('latitud','Required parameter requestParameters.latitud was null or undefined when calling getLineasByLatitudLongitudLineasLatitudLongitudGet.');
        }

        if (requestParameters.longitud === null || requestParameters.longitud === undefined) {
            throw new runtime.RequiredError('longitud','Required parameter requestParameters.longitud was null or undefined when calling getLineasByLatitudLongitudLineasLatitudLongitudGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/lineas/{latitud}/{longitud}`.replace(`{${"latitud"}}`, encodeURIComponent(String(requestParameters.latitud))).replace(`{${"longitud"}}`, encodeURIComponent(String(requestParameters.longitud))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Lineas By Latitud Longitud
     */
    async getLineasByLatitudLongitudLineasLatitudLongitudGet(requestParameters: GetLineasByLatitudLongitudLineasLatitudLongitudGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getLineasByLatitudLongitudLineasLatitudLongitudGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get Lineas By Nombre
     */
    async getLineasByNombreRaw(requestParameters: GetLineasByNombreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Linea>>> {
        if (requestParameters.nombre === null || requestParameters.nombre === undefined) {
            throw new runtime.RequiredError('nombre','Required parameter requestParameters.nombre was null or undefined when calling getLineasByNombre.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/lineas/{nombre}`.replace(`{${"nombre"}}`, encodeURIComponent(String(requestParameters.nombre))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(LineaFromJSON));
    }

    /**
     * Get Lineas By Nombre
     */
    async getLineasByNombre(requestParameters: GetLineasByNombreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Linea>> {
        const response = await this.getLineasByNombreRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
